for(j in 1:dim(station_location)[1]){
temp[j] <- distCosine(address_df[i,c(2,1)] , station_location[j,c(4,3)])
}
distance_of_station[i,1] <- min(temp)
################################################################################################
######### 超重要！這邊多寫一個邏輯判斷式，是因為相同最膽距離下，可能會同時存在兩個捷運站，
######### 例如，給定最短距離是500公尺，剛好第一筆資料跟忠孝復興捷運站跟中山國中站的距離都是500
######### 所以這這種情況下，我先把最短捷運站名稱定義成NA，之後再想辦法處理。刪除NA資料時，要避開
######### 此欄位，因為此欄位還是存在最短距離的自變數
################################################################################################
if(length(station_location[ temp == min(temp) ,2]) > 1){
distance_of_station[i,2] <-NA
}else{
distance_of_station[i,2] <- station_location[ temp == min(temp) ,2]
}
################################################################################################
temp <- rep(0,dim(park_location)[1])
for(j in 1:dim(park_location)[1]){
temp[j] <- distCosine(address_df[i,c(2,1)] , park_location[j,c(3,2)])
}
distance_of_station[i,3] <- min(temp)
###################################################################################################
#跟前面同理   #####################################################################################
if(length(park_location[ temp == min(temp) ,1]) > 1){
distance_of_station[i,4] <-NA
}else{
distance_of_station[i,4] <- park_location[ temp == min(temp) ,1]}
################################################################################################
print(i)
}
################# 接著把distance_of_station 還有 address_df併在一起就完成了 #####################
#station_loction<-read.table(file ="/Users/nowbird/Documents/各類文件/pq/station_latlng.txt",header = T,sep = ",",stringsAsFactors = F)
################12/26 下個步驟是要使用 RAAN套件 #################################################
###############12/26 跑回歸前，要先在total資料中，刪掉 NA的欄位 #################################
###############12/26 大筆資料跑回歸，又是另一個關卡了 ###########################################
install.packages("tidyr")
install.packages("httr")
install.packages("httr")
install.packages("RCurl")
install.packages("XML")
install.packages("bitops")
install.packages("magrittr")
install.packages("geosphere")
install.packages("xml2")
install.packages("rvest")
library(tidyr)
library(httr)
library(RCurl)
library(XML)
library(bitops)
library(magrittr)
library(dplyr)
library(geosphere)
library(xml2)
library(rvest)
###########################
######### 抓經緯度 ########
###########################
#address_df <- data.frame(lat = rep(0,length(address)),
#                         lng = rep(0, length(address)))
########################### 這邊應該要加一個load(total)的指令
address <- total$address
#######################12/26 改了起點跟終點 #####################
start =10087
end = 10129
################################################################
tmp_address <- address[start:end]
root = "http://maps.google.com/maps/api/geocode/"
return.call = "xml"
sensor = "false"
num = start
for(each_address in tmp_address){
url_gen = paste0(root, return.call, "?address=", each_address, "&sensor=", sensor)
html_code<-read_xml(url_gen)
if(xml_text(xml_find_first(html_code,"//GeocodeResponse//status"))=="OK"){
lat=xml_find_first(html_code,"//result//geometry//location//lat")%>%xml_text()
lng=xml_find_first(html_code,"//result//geometry//location//lng")%>%xml_text()
loc_type=xml_find_first(html_code,"//result//geometry//location_type")%>%xml_text()
address_df[num,1] <- lat
address_df[num,2] <- lng
address_df[num,3] <- loc_type
}
else if(xml_text(xml_find_first(html_code,"//GeocodeResponse//status"))=="ZERO_RESULTS"){
lat= ""
lng= ""
loc_type=""
address_df[num,1] <- lat
address_df[num,2] <- lng
address_df[num,3] <- loc_type
}
else {
print(paste0('error happened in row : ', as.character(num)))
break
}
num = num + 1
print(num)
}
save(address_df,file = "2016.12.26.RData")
#'total <- cbind(total, address_df)
#pp591<-filter(total,!grepl("~",address))
#qq591<-filter(total,grepl("~",address))
################################################################################################
################################# 算資料與捷運站還有公園的距離 #################################
################################################################################################
#### 這邊應該要加一個load(park)的指令 ###########################(12/26)
#### 我把Fileencoding刪掉了，還有改工作路徑 。###################(12/26)
#### 超重要！！！！！我改了station_location的名字！##############(12/26)
station_location<-read.table(file ="/Users/nowbird/Documents/各類文件/pq/station_latlng.txt",header = T,sep = ",",stringsAsFactors = F)
park_location <- park[,c(1,6,7)]  ####如果我給你了整理好的park_loaction資料，這行就不需要了
#################################################################(12/26)
address_df$lat <- as.numeric(address_df$lat)
address_df$lng <- as.numeric(address_df$lng)
park_location$Latitude <- as.numeric(park_location$Latitude)
park_location$Longitude <- as.numeric(park_location$Longitude)
distance_of_station <- data.frame(min_station = rep(0,dim(address_df)[1]),
min_station_name = rep(0,dim(address_df)[1]),
min_park = rep(0,dim(address_df)[1]),
min_park_name = rep(0,dim(address_df)[1]))
for(i in 1:10129){ ######你把起點跟終點改一下，可以繼續往下算最短距離。
if(is.na(address_df[i,1]) == T) next
temp <- rep(0,dim(station_location)[1])
for(j in 1:dim(station_location)[1]){
temp[j] <- distCosine(address_df[i,c(2,1)] , station_location[j,c(4,3)])
}
distance_of_station[i,1] <- min(temp)
################################################################################################
######### 超重要！這邊多寫一個邏輯判斷式，是因為相同最膽距離下，可能會同時存在兩個捷運站，
######### 例如，給定最短距離是500公尺，剛好第一筆資料跟忠孝復興捷運站跟中山國中站的距離都是500
######### 所以這這種情況下，我先把最短捷運站名稱定義成NA，之後再想辦法處理。刪除NA資料時，要避開
######### 此欄位，因為此欄位還是存在最短距離的自變數
################################################################################################
if(length(station_location[ temp == min(temp) ,2]) > 1){
distance_of_station[i,2] <-NA
}else{
distance_of_station[i,2] <- station_location[ temp == min(temp) ,2]
}
################################################################################################
temp <- rep(0,dim(park_location)[1])
for(j in 1:dim(park_location)[1]){
temp[j] <- distCosine(address_df[i,c(2,1)] , park_location[j,c(3,2)])
}
distance_of_station[i,3] <- min(temp)
###################################################################################################
#跟前面同理   #####################################################################################
if(length(park_location[ temp == min(temp) ,1]) > 1){
distance_of_station[i,4] <-NA
}else{
distance_of_station[i,4] <- park_location[ temp == min(temp) ,1]}
################################################################################################
print(i)
}
################# 接著把distance_of_station 還有 address_df併在一起就完成了 #####################
#station_loction<-read.table(file ="/Users/nowbird/Documents/各類文件/pq/station_latlng.txt",header = T,sep = ",",stringsAsFactors = F)
################12/26 下個步驟是要使用 RAAN套件 #################################################
###############12/26 跑回歸前，要先在total資料中，刪掉 NA的欄位 #################################
###############12/26 大筆資料跑回歸，又是另一個關卡了 ###########################################
station<-mutate(total,mp=price/area)%>%group_by(section, min_station)%>%summarise(mean=mean(mp,na.rm=T))
result$price<-as.numeric(gsub(",","",result$price))
station<-mutate(result,mp=price/area)%>%group_by(section, min_station)%>%summarise(mean=mean(mp,na.rm=T))
station
View(station)
write.table(station, D:\\github\\project\\csv\\station.csv, sep=",")
write.table("station", D:\\github\\project\\csv\\station.csv, sep=",")
write.table(station, "D:\\github\\project\\csv\\station.csv", sep=",")
library(jsonlite)
library(plyr)
library(rvest)
library(dplyr)
result<-data.frame()
for(i in (1:10)){
house<-paste0("https://evertrust.yungching.com.tw/region/%e5%8f%b0%e5%8c%97%e5%b8%82/%e5%85%a7%e6%b9%96%e5%8d%80/",i,"?q=&dt=&d=24&t=1&a=&c=&x=&y=")
house<-fromJSON(house)
}
library(jsonlite)
library(plyr)
library(rvest)
library(dplyr)
result<-data.frame()
for(i in (1:10)){
house<-paste0("https://evertrust.yungching.com.tw/region/%e5%8f%b0%e5%8c%97%e5%b8%82/%e5%85%a7%e6%b9%96%e5%8d%80/",i,"?q=&dt=&d=24&t=1&a=&c=&x=&y=")
house<-fromJSON(house)
}
library(jsonlite)
library(plyr)
library(rvest)
library(dplyr)
result<-data.frame()
for(i in (1:10)){
house<-paste0("https://evertrust.yungching.com.tw/region/%e5%8f%b0%e5%8c%97%e5%b8%82/%e5%85%a7%e6%b9%96%e5%8d%80/",i,"?q=&dt=&d=24&t=1&a=&c=&x=&y=")
house<-fromJSON(house)
}
fromJSON("https://evertrust.yungching.com.tw/region/%e5%8f%b0%e5%8c%97%e5%b8%82/%e4%b8%8d%e9%99%90/1?d=24&t=1&a=&c=")
fromJSON("https://evertrust.yungching.com.tw/region/%e5%8f%b0%e5%8c%97%e5%b8%82/%e4%b8%8d%e9%99%90/1?d=24&t=1&a=&c=")
library(jsonlite)
library(plyr)
house<-fromJSON("https://evertrust.yungching.com.tw/region/%e5%8f%b0%e5%8c%97%e5%b8%82/%e4%b8%8d%e9%99%90/1?d=24&t=1&a=&c=")
load("C:/Users/b0420/Downloads/total591.RData")
library(jsonlite)
library(plyr)
library(rvest)
library(dplyr)
result<-data.frame()
house<-("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%u58EB%u6797%u5340")
house<-fromJSON(house)
#read jason
#df<-house$data$data
#result<-rbind.fill(result,df)
view(house)
house
df<-house$[[2]]
df<-house[[2]]
df<-house[[2]][,1:2]
df
write.table(df, "D:/github/project/csv/avg_buy.csv")
df<- as.numeric(df)
df<-house[[2]][,2]
df<- as.numeric(df)
write.table(df, "D:/github/project/csv/avg_buy.csv")
write.table(df, "D:/github/project/csv/avg_buy.csv")
write.table(df, "D:/github/project/csv/avg_buy.csv", sep=",")
write.table(df, "D:/github/project/csv/avg_buy.csv", sep=",")
df<- as.numeric(df)
write.table(df, "D:/github/project/csv/avg_buy.csv", sep=",")
df<-house[[2]][,2]
df[,2]<- as.numeric(df)
df[,2]<-house[[2]][,2]
df<-house[[2]][,2]
df<- as.numeric(df)
df
avg_buy<- mean(df)
avg_buy
result<-rbind.fill(result,avg_buy)
section<- c("u58EB%u6797","u5927%u5B89","u4E2D%u5C71","u4E2D%u6B63","u5927%u540C", "u5167%u6E56",
"u6587%u5C71", "u5317%u6295", "u677E%u5C71","u4FE1%u7FA9", "u5357%u6E2F", "u842C%u83EF")
for (i in (1:12)){
result<-data.frame()
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]
df<- as.numeric(df)
result<-rbind.fill(result,df)
}
section<- c("u58EB%u6797","u5927%u5B89","u4E2D%u5C71","u4E2D%u6B63","u5927%u540C", "u5167%u6E56",
"u6587%u5C71", "u5317%u6295", "u677E%u5C71","u4FE1%u7FA9", "u5357%u6E2F", "u842C%u83EF")
for (i in (1:12)){
result<-data.frame()
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]
result<-rbind.fill(result,df)
}
section<- c("u58EB%u6797","u5927%u5B89","u4E2D%u5C71","u4E2D%u6B63","u5927%u540C", "u5167%u6E56",
section<- c("u58EB%u6797","u5927%u5B89","u4E2D%u5C71","u4E2D%u6B63","u5927%u540C", "u5167%u6E56",
"u6587%u5C71", "u5317%u6295", "u677E%u5C71","u4FE1%u7FA9", "u5357%u6E2F", "u842C%u83EF")
)
section<- c("u58EB%u6797","u5927%u5B89","u4E2D%u5C71","u4E2D%u6B63","u5927%u540C", "u5167%u6E56",
"u6587%u5C71", "u5317%u6295", "u677E%u5C71","u4FE1%u7FA9", "u5357%u6E2F", "u842C%u83EF")
section
for (i in (1:12)){
result<-data.frame()
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]
result<-rbind.fill(result,df)
}
for (i in (1:12)){
result<-data.frame()
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]
#result<-rbind.fill(result,df)
}
result
df
result<-data.frame()
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]
result<-rbind.fill(result,df)
}
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]
#result<-rbind.fill(result,df)
}
df
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]
result[,i]<-df
}
View(result)
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]
result<-mutate(result, df)
}
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]
result<-rbind.fill(result,df)
}
library(jsonlite)
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,1:2]
result<-rbind.fill(result,df)
}
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[2][,2]
result<-rbind.fill(result,df)
}
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]]
result<-rbind.fill(result,df)
}
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[1],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]
df
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-paste0("df",i)
df<-house[[2]][,2]
#result<-rbind.fill(result,df)
}
write.table(df, "D:/github/project/csv/avg_buy.csv", sep=",")
df
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
paste0("df",i)<-house[[2]][,2]
#result<-rbind.fill(result,df)
}
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]
df<- numeric(df)
result<-rbind.fill(result,df)
}
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]
#result<-rbind.fill(result,df)
}
mode(df)
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]
df<-numeric(mean(df))
result<-rbind.fill(result,df)
}
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]
df<-numeric(df)
df<-mean(df)
result<-rbind.fill(result,df)
}
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]
df<-mean(df)
result<-rbind.fill(result,df)
}
f<-numeric(df)
df
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]
#f<-numeric(df)
#df<-mean(df)
#result<-rbind.fill(result,df)
}
df
numeric(df)
df
mean(df)
mode(df)
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]%>%as.numeric()%>% mean()
#df<-mean(df)
#result<-rbind.fill(result,df)
}
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]%>%as.numeric()%>% mean()
result<-rbind.fill(result,df)
}
result<-mutate(result,df)
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]%>%as.numeric()%>% mean()
result<-mutate(result,df)
}
write.table(df, "D:/github/project/csv/avg_buy.csv", sep=",")
write.table(result, "D:/github/project/csv/avg_buy.csv", sep=",")
result
df
result<-c()
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=m&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]%>%as.numeric()%>% mean()
result[i]<-df
}
result
write.table(result, "D:/github/project/csv/avg_buy.csv", sep=",")
write.table(result, "D:/github/project/csv/avg_buy.csv")
result
write.table(result, "D:/github/project/csv/avg_buy.csv",sep=",")
write.table(result, "D:/github/project/csv/avg_buy.csv",sep=",")
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=3&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]%>%as.numeric()%>% mean()
result[i]<-df
}
write.table(result, "D:/github/project/csv/avg_buy2.csv",sep=",")
result<-c()
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=3&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[1]][,2]%>%as.numeric()%>% mean()
result[i]<-df
}
write.table(result, "D:/github/project/csv/avg_buy2.csv",sep=",")
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=3&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[1]][,2]%>%as.numeric()%>% mean()
result[i]<-df
}
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetSaleCaseChart.ashx?period=3&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]%>%as.numeric()%>% mean()
result[i]<-df
}
result
house
house[[1]]
house[[2]]
house<-("https://price.housefun.com.tw/Ashx/GetDealCaseChart.ashx?period=3&type=2&county=%u53F0%u5317%u5E02&district=%u58EB%u6797%u5340")
house<-fromJSON(house)
house
house[[2]][,1:2]
for (i in (1:12)){
house<-paste0("https://price.housefun.com.tw/Ashx/GetDealCaseChart.ashx?period=3&type=2&county=%u53F0%u5317%u5E02&district=%",section[i],"%u5340")
house<-fromJSON(house)
#read jason
df<-house[[2]][,2]%>%as.numeric()%>% mean()
result[i]<-df
}
write.table(result, "D:/github/project/csv/avg_buy2.csv",sep=",")
write.table(result, "D:/github/project/csv/avg_buy2.csv",sep=",")
shiny::runApp('D:/Rnew/pecu/NTU_R-master/houseprice')
runApp('D:/Rnew/pecu/NTU_R-master/houseprice')
runApp('D:/Rnew/pecu/NTU_R-master/houseprice')
Icons<- iconList(
runApp('D:/Rnew/pecu/NTU_R-master/houseprice')
)
